{
    "project": {},
    "files": {
        "axis.js": {
            "name": "axis.js",
            "modules": {},
            "classes": {
                "ResponsiveAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "brush.js": {
            "name": "brush.js",
            "modules": {},
            "classes": {
                "ResponsiveBrush": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "event.js": {
            "name": "event.js",
            "modules": {},
            "classes": {
                "ResponsiveEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "selector.js": {
            "name": "selector.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tooltip.js": {
            "name": "tooltip.js",
            "modules": {},
            "classes": {
                "ResponsiveTooltip": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "ResponsiveAxis": {
            "name": "ResponsiveAxis",
            "shortname": "ResponsiveAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "axis.js",
            "line": 1,
            "description": "<b>Responsive Axis For d3js library :</b><br/>\n<br/>\nResponive axis allows you to create axis for timeline, line chart, ...\nThose axis will be responsive and you don't need to take care to\nthe size of them. <br/>\nTo instanciate one, you need to set the following parameters into a json object :<br/>\n<b>g</b> : g element used to draw chart (required)<br/>\n<b>orientation</b> : top, bottom, left, right (default bottom)<br/>\n<b>datatype</b> : type of data to display on axis<br/>\n<b>domain</b> : array of values to display on axis (required)<br/>\n<b>cls</b> : css class for axis<br/>\n<b>autoresize</b>  : indicate if resize is automatically done (default false)<br/>\n<b>fixedHeight</b> : indicate if the size of y axis is not resizable (default false)<br/>\n<br/>\n<b>Example:</b><br/>\n var axis = new ResponsiveAxis({<br/>\n     &nbsp;&nbsp;&nbsp;g: graph,<br/>\n     &nbsp;&nbsp;&nbsp;orientation: $$ResponsiveUtil._BOTTOM_,<br/>\n     &nbsp;&nbsp;&nbsp;datatype: \"year\",<br/>\n     &nbsp;&nbsp;&nbsp;cls: \"x axis\",<br/>\n     &nbsp;&nbsp;&nbsp;domain: d3.extent(data, function (d) {<br/>\n         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return d.date;<br/>\n     &nbsp;&nbsp;&nbsp;}),<br/>\n     &nbsp;&nbsp;&nbsp;autoresize: false<br/>\n )();<br/>\n<br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        },
        "ResponsiveBrush": {
            "name": "ResponsiveBrush",
            "shortname": "ResponsiveBrush",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "brush.js",
            "line": 1,
            "description": "<b>Responsive Brush For d3js library :</b><br/>\n<br/>\nResponive brush allows you to create brush for timeline, line chart, ...\nBrush system allows you to zoom and navigate into your chart.\nBrush element will be responsive and you don't need to take care to\nthe size of them. <br/>\nTo instantiate one, you need to set the following parameters into a json object :<br/>\n<b>svg</b> : svg element (required)<br/>\n<b>area</b> : area element used to draw chart (required)<br/>\n<b>areaSelector</b> : d3js selector to retrieve area (required)<br/>\n<b>cX</b> : x axis of main chart (required)<br/>\n<b>cY</b> : y axis of main chart (required)<br/>\n<b>height</b> : height of the brush element (default 50)<br/>\n<b>margin</b> : margin to apply to brush element (default {top: 0, right: 0, bottom: 0, left: 0})<br/>\n<b>autoresize</b>  : indicate if resize is automatically done (default false)<br/>\n<br/>\n<b>Example:</b><br/>\nvar brush = new ResponsiveBrush({<br/>\n     &nbsp;&nbsp;&nbsp;svg: svg,<br/>\n     &nbsp;&nbsp;&nbsp;area: area,<br/>\n     &nbsp;&nbsp;&nbsp;areaSelector: \".area\",<br/>\n     &nbsp;&nbsp;&nbsp;cX: aResponsiveAxis,<br/>\n     &nbsp;&nbsp;&nbsp;cY: aResponsiveAxis,<br/>\n     &nbsp;&nbsp;&nbsp;margin: {<br/>\n         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top: 50,<br/>\n         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left: 60<br/>\n     &nbsp;&nbsp;&nbsp;}<br/>\n })();<br/>\n <br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        },
        "ResponsiveEvent": {
            "name": "ResponsiveEvent",
            "shortname": "ResponsiveEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "event.js",
            "line": 1,
            "description": "<b>Responsive Event For d3js library :</b><br/>\n<br/>\nResponive event allows you to define only one event for all devices by extension. <br/>\nTo instantiate one, you need to pass the following parameters into a json object :<br/>\n<b>object</b> : object which listen to events (required)<br/>\n<b>events</b> : list of events that can be extended\nassociated with function listen by the object (required)<br/>\n<br/>\n<b>Example:</b><br/>\nnew ResponsiveEvent({<br/>\n     &nbsp;&nbsp;&nbsp;object : window,<br/>\n     &nbsp;&nbsp;&nbsp;events : [<br/>\n         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"name\" : \"mousemove\", \"func\": function1, \"extend\": true},<br/>\n         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"name\" : \"mouseout\", \"func\": function2, \"extend\": false,<br/>\n         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\"name\" : \"touchend\", \"func\": function3, \"extend\": false}<br/>\n     &nbsp;&nbsp;&nbsp;]<br/>\n})()<br/>\n<br/>\n<b>Mapped events</b>\n<table>\n<tr><th>Mouse</th><th>Touch</th><tr>\n<tr><td>mousedown</td><td>touchstart</td><tr>\n<tr><td>mouseup</td><td>touchenter</td><tr>\n<tr><td>mouseover</td><td>mouseover</td><tr>\n<tr><td>mouseout</td><td>touchleave</td><tr>\n<tr><td>mousemove</td><td>touchmove</td><tr>\n<tr><td>click</td><td>tap</td><tr>\n<tr><td>dblclick</td><td>doubletap</td><tr>\n<tr><td>mousecancel (fake)</td><td>touchcancel</td><tr>\n</table>\n</br>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        },
        "ResponsiveTooltip": {
            "name": "ResponsiveTooltip",
            "shortname": "ResponsiveTooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "tooltip.js",
            "line": 1,
            "description": "<b>Responsive Tooltip For d3js library :</b><br/>\n<br/>\nResponive tooltip allows you to create tooltip to show details.\nTooltip element will be responsive and you don't need to take care to\nthe size and position of them. <br/>\nTo instantiate one, you need to set the following parameters into a json object :<br/>\n<b>g</b> : g element used to draw tooltip (required)<br/>\n<b>cls</b> : css class for axis<br/>\n<b>autoresize</b>  : indicate if resize is automatically done (default false)<br/>\n<br/>\n<b>Example:</b><br/>\nvar tooltip = new ResponsiveTooltip({<br/>\n     &nbsp;&nbsp;&nbsp;g: g,<br/>\n     &nbsp;&nbsp;&nbsp;cls: \"fixed_tooltip\",<br/>\n })();<br/>\n <br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        }
    },
    "classitems": [
        {
            "file": "axis.js",
            "line": 37,
            "description": "g element used to draw chart<br/>\nRead with : axis.g()<br/>\nWrite with : axis.g(newValue)<br/>",
            "itemtype": "attribute",
            "name": "g",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 48,
            "description": "Size of current axis in px<br/>\nRead with : axis.size()<br/>\nWrite with : axis.size(newValue)<br/>",
            "itemtype": "attribute",
            "name": "size",
            "access": "private",
            "tagname": "",
            "type": "Integer",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 58,
            "description": "Orientation of the axis<br/>\nEnable values : top, bottom, left, right<br/>\nRead with : axis.orientation()<br/>\nWrite with : axis.orientation(newValue)<br/>",
            "itemtype": "attribute",
            "name": "orientation",
            "access": "public",
            "tagname": "",
            "type": "String",
            "default": "bottom",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 70,
            "description": "Type of data to display on axis<br/>\nEnable values : year, month, day<br/>\nRead with : axis.datatype()<br/>\nWrite with : axis.datatype(newValue)<br/>",
            "itemtype": "attribute",
            "name": "datatype",
            "access": "public",
            "tagname": "",
            "type": "String",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 81,
            "description": "Array of values to display on axis<br/>\nRead with : axis.domain()<br/>\nWrite with : axis.domain(newValue)<br/>",
            "itemtype": "attribute",
            "name": "domain",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Array",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 92,
            "description": "Css class to apply on axis<br/>\nRead with : axis.cls()<br/>\nWrite with : axis.cls(newValue)<br/>",
            "itemtype": "attribute",
            "name": "cls",
            "access": "public",
            "tagname": "",
            "type": "String",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 102,
            "description": "Indicate if resize is automatically done<br/>\nRead with : axis.autoresize()<br/>\nWrite with : axis.autoresize(newValue)<br/>",
            "itemtype": "attribute",
            "name": "autoresize",
            "access": "public",
            "tagname": "",
            "type": "Boolean",
            "default": "false",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 113,
            "description": "Indicate if the size of y axis is not resizable<br/>\nRead with : axis.fixedHeight()<br/>\nWrite with : axis.fixedHeight(newValue)<br/>",
            "itemtype": "attribute",
            "name": "fixedHeight",
            "access": "public",
            "tagname": "",
            "type": "Boolean",
            "default": "false",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 124,
            "description": "List of events attached<br/>\nRead with : axis.events()<br/>",
            "itemtype": "attribute",
            "name": "events",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "readonly": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 136,
            "description": "ResponsiveAxis Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 167,
            "description": "Method to attach custom event",
            "itemtype": "method",
            "name": "on",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to add",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "function to call on event triggered",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 183,
            "description": "Method to trigger event",
            "itemtype": "method",
            "name": "trigger",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to trigger",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "arguments to apply to the function called",
                    "type": "Object"
                }
            ],
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 204,
            "description": "Method to remove function on event",
            "itemtype": "method",
            "name": "remove",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to clear",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "function to remove",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 219,
            "description": "Add default events to current object",
            "itemtype": "method",
            "name": "addDefaultEvents",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 229,
            "description": "This method init properties for axis",
            "itemtype": "method",
            "name": "initProperties",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 251,
            "description": "Retrieve the parent container of g element",
            "itemtype": "method",
            "name": "initContainer",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "parent container of g element",
                "type": "HTMLElement"
            },
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 267,
            "description": "Initialize data to display on axis",
            "itemtype": "method",
            "name": "initContainer",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "data created by the function",
                "type": "Object"
            },
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 295,
            "description": "Initialize axis",
            "itemtype": "method",
            "name": "initAxis",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "the data returned by initData function",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "axis created by the function",
                "type": "Object"
            },
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 308,
            "description": "Initialize gap : the difference between container size and current graph size",
            "itemtype": "method",
            "name": "initRatio",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "container",
                    "description": "the g container",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "gap",
                "type": "Object"
            },
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 326,
            "description": "This method allows to update gap proportion (height and width)",
            "itemtype": "method",
            "name": "updateRatio",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "updateHeight",
                    "description": "indicate if need to update height value of gap",
                    "type": "Boolean"
                },
                {
                    "name": "value",
                    "description": "value to add to gap",
                    "type": "Integer"
                },
                {
                    "name": "redraw",
                    "description": "indicate if axis need to be redraw",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "gap into json object {heigh: h, width: w}",
                "type": "Object"
            },
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 349,
            "description": "This method recalculates the height of gap\n(used for axis that have fixed height)",
            "itemtype": "method",
            "name": "updateHeightRatio",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 361,
            "description": "This method update range of axis",
            "itemtype": "method",
            "name": "updateHeightRatio",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 379,
            "description": "This method updates axis size with the size sets in parameter\nIf parameter is not set, the axis is resize to the complete of container",
            "itemtype": "method",
            "name": "updateHeightRatio",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "cSize",
                    "description": "json size of container {height: h, width: w}",
                    "type": "Object"
                }
            ],
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 402,
            "description": "This method update the quantity of information\ndisplay on the axis",
            "itemtype": "method",
            "name": "updateAxisTicks",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 431,
            "description": "Get the container size",
            "itemtype": "method",
            "name": "getContainerSize",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "size into json object {height: h, width: w}",
                "type": "Object"
            },
            "class": "ResponsiveAxis"
        },
        {
            "file": "axis.js",
            "line": 447,
            "description": "Method that draws axis into g :<br/>\nUpdates :<br/>\n - the size of axis (automatically recalculated)\n - the range\n - the quantity of information to display",
            "itemtype": "method",
            "name": "draw",
            "access": "public",
            "tagname": "",
            "class": "ResponsiveAxis"
        },
        {
            "file": "brush.js",
            "line": 39,
            "description": "Main svg element<br/>\nRead with : brush.svg()<br/>\nWrite with : brush.svg(newValue)<br/>",
            "itemtype": "attribute",
            "name": "g",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 50,
            "description": "Area element used to draw chart<br/>\nRead with : brush.area()<br/>\nWrite with : brush.area(newValue)<br/>",
            "itemtype": "attribute",
            "name": "area",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 61,
            "description": "d3js selector to retrieve area<br/>\nRead with : brush.areaSelector()<br/>\nWrite with : brush.areaSelector(newValue)<br/>",
            "itemtype": "attribute",
            "name": "areaSelector",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 72,
            "description": "x axis of main chart<br/>\nRead with : brush.cX()<br/>\nWrite with : brush.cX(newValue)<br/>",
            "itemtype": "attribute",
            "name": "cX",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "ResponsiveAxis",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 83,
            "description": "y axis of main chart<br/>\nRead with : brush.cY()<br/>\nWrite with : brush.cY(newValue)<br/>",
            "itemtype": "attribute",
            "name": "cY",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "ResponsiveAxis",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 94,
            "description": "Meight of the brush element<br/>\nRead with : brush.height()<br/>\nWrite with : brush.height(newValue)<br/>",
            "itemtype": "attribute",
            "name": "height",
            "access": "public",
            "tagname": "",
            "type": "Integer",
            "default": "50",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 105,
            "description": "Margin to apply to brush element<br/>\nRead with : brush.margin()<br/>\nWrite with : brush.margin(newValue)<br/>",
            "itemtype": "attribute",
            "name": "margin",
            "access": "public",
            "tagname": "",
            "type": "Object",
            "default": "{top: 0, right: 0, bottom: 0, left: 0}",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 116,
            "description": "Indicate if resize is automatically done<br/>\nRead with : axis.autoresize()<br/>\nWrite with : axis.autoresize(newValue)<br/>",
            "itemtype": "attribute",
            "name": "autoresize",
            "access": "public",
            "tagname": "",
            "type": "Boolean",
            "default": "false",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 130,
            "description": "ResponsiveBrush Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 162,
            "description": "Method to attach custom event",
            "itemtype": "method",
            "name": "on",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to add",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "function to call on event triggered",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 178,
            "description": "Method to trigger event",
            "itemtype": "method",
            "name": "trigger",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to trigger",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "arguments to apply to the function called",
                    "type": "Object"
                }
            ],
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 199,
            "description": "Method to remove function on event",
            "itemtype": "method",
            "name": "remove",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event event to clear",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "function function to remove",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 214,
            "description": "Add default events to current object",
            "itemtype": "method",
            "name": "addDefaultEvents",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 224,
            "description": "This method init properties for axis",
            "itemtype": "method",
            "name": "initProperties",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 272,
            "description": "Initialize g element to draw brush",
            "itemtype": "method",
            "name": "initGraph",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "g element create",
                "type": "Object"
            },
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 288,
            "description": "Initialize brush",
            "itemtype": "method",
            "name": "initBrush",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ResponsiveAxis",
                    "description": "x"
                }
            ],
            "return": {
                "description": "brush",
                "type": "Object"
            },
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 307,
            "description": "Construct the brush slider",
            "itemtype": "method",
            "name": "constructSlider",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 322,
            "description": "Method that draws the brush :<br/>\nUpdate his size automatically",
            "itemtype": "method",
            "name": "draw",
            "access": "public",
            "tagname": "",
            "class": "ResponsiveBrush"
        },
        {
            "file": "brush.js",
            "line": 337,
            "description": "Method that brushes<br/>\nUpdate the domain of main chart",
            "itemtype": "method",
            "name": "brushed",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveBrush"
        },
        {
            "file": "event.js",
            "line": 41,
            "description": "Object which listen to events<br/>\nRead with : object.g()<br/>\nWrite with : object.g(newValue)<br/>",
            "itemtype": "attribute",
            "name": "object",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 52,
            "description": "List of events that can be extended\nassociated with function listen by the object<br/>\nRead with : axis.events()<br/>\nWrite with : axis.events(newValue)<br/>",
            "itemtype": "attribute",
            "name": "events",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 64,
            "itemtype": "attribute",
            "name": "eventsId",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 86,
            "description": "ResponsiveEvent Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 104,
            "description": "This method init properties for axis",
            "itemtype": "method",
            "name": "initProperties",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 122,
            "description": "Define event on current obj",
            "itemtype": "method",
            "name": "initEvent",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "name of event to define",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "function to invoke when event is triggered",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 142,
            "description": "Intercept the touch event triggered by the user in order to transform it",
            "itemtype": "method",
            "name": "intercept",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 160,
            "description": "Transform a touch event into mouse event and dispatch it",
            "itemtype": "method",
            "name": "transformEvent",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "Hammer Event or Touch Event to transform",
                    "type": "Event"
                },
                {
                    "name": "type",
                    "description": "name of event",
                    "type": "String"
                }
            ],
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 194,
            "description": "Indicate if event name pass in parameter is mouse event",
            "itemtype": "method",
            "name": "isMouseEvent",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if event is mouse event",
                "type": "Boolean"
            },
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 206,
            "description": "Method that retrieves \nthe mapped event to event pass in parameter",
            "itemtype": "method",
            "name": "getMappedEvent",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "name of event to get the matching event",
                    "type": "String"
                }
            ],
            "return": {
                "description": "event name of mapped event",
                "type": "String"
            },
            "class": "ResponsiveEvent"
        },
        {
            "file": "event.js",
            "line": 231,
            "description": "Method that generates unique id",
            "itemtype": "method",
            "name": "generateId",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "an unique id",
                "type": "String"
            },
            "class": "ResponsiveEvent"
        },
        {
            "file": "selector.js",
            "line": 8,
            "description": "Create a responsive selector",
            "params": [
                {
                    "name": "json",
                    "description": "object options :\ng : graph\ndepth : the initial depth\nlayout : layout for data\nparentsCls : class name for parents\nchildrenCls : children class name\nnode : the current node\nroot : the root of tree\nautoresize : indicate if resize is automatically done"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 33,
            "description": "Constructor",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 54,
            "description": "Method to attach custom event",
            "params": [
                {
                    "name": "the",
                    "description": "event to add"
                },
                {
                    "name": "the",
                    "description": "function to call on event triggered"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 67,
            "description": "Method to trigger event",
            "params": [
                {
                    "name": "the",
                    "description": "event to trigger"
                },
                {
                    "name": "the",
                    "description": "args to apply to the function called"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 85,
            "description": "Method to remove event on function",
            "params": [
                {
                    "name": "the",
                    "description": "event to clear"
                },
                {
                    "name": "the",
                    "description": "function to remove"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 97,
            "description": "Add default events to current object",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 113,
            "description": "Method to init properties for tooltip",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 130,
            "description": "Retrieve the container element",
            "return": {
                "description": "container",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 143,
            "description": "Init gap",
            "return": {
                "description": "object gap"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 157,
            "description": "Init data and put element\nallParents on children \nif it doesn't exist",
            "return": {
                "description": "parents",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 185,
            "description": "Method to init first parents outline",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 254,
            "description": "Method to draw title of first parent",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 291,
            "description": "Method to update first parents outline",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 359,
            "description": "Method to update first parents title",
            "params": [
                {
                    "name": "node",
                    "description": ""
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 397,
            "description": "Get the selector container size",
            "return": {
                "description": "json object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 411,
            "description": "Method to draw the outline",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 465,
            "description": "Method to draw the selector",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 473,
            "description": "Method to draw the outline of node",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 503,
            "description": "Method to redraw the selector\non a changed node",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 514,
            "description": "Method to hide",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "selector.js",
            "line": 534,
            "description": "Method called on window resize event",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 26,
            "description": "g element used to draw tooltip<br/>\nRead with : tooltip.g()<br/>\nWrite with : tooltip.g(newValue)<br/>",
            "itemtype": "attribute",
            "name": "g",
            "access": "public",
            "tagname": "",
            "required": 1,
            "type": "Object",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 38,
            "description": "Css class to apply on tooltip<br/>\nRead with : tooltip.cls()<br/>\nWrite with : tooltip.cls(newValue)<br/>",
            "itemtype": "attribute",
            "name": "cls",
            "access": "public",
            "tagname": "",
            "type": "String",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 48,
            "description": "Indicate if resize is automatically done<br/>\nRead with : tooltip.autoresize()<br/>\nWrite with : tooltip.autoresize(newValue)<br/>",
            "itemtype": "attribute",
            "name": "autoresize",
            "access": "public",
            "tagname": "",
            "type": "Boolean",
            "default": "false",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 59,
            "description": "List of events attached <br/>\nRead with : tooltip.events()<br/>",
            "itemtype": "attribute",
            "name": "events",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "readonly": "",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 71,
            "description": "ResponsiveTooltip Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 96,
            "description": "Method to attach custom event",
            "itemtype": "method",
            "name": "on",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to add",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "function to call on event triggered",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 112,
            "description": "Method to trigger event",
            "itemtype": "method",
            "name": "trigger",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to trigger",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "arguments to apply to the function called",
                    "type": "Object"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 148,
            "description": "Method to remove function on event",
            "itemtype": "method",
            "name": "remove",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "event to clear",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "function to remove",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 163,
            "description": "Add default events to current object",
            "itemtype": "method",
            "name": "addDefaultEvents",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 174,
            "description": "This method init properties for tooltip",
            "itemtype": "method",
            "name": "initProperties",
            "access": "private",
            "tagname": "",
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 196,
            "description": "Retrieve the parent container of g element",
            "itemtype": "method",
            "name": "initContainer",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "parent container of g element",
                "type": "HTMLElement"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 212,
            "description": "Initialize container for tooltip",
            "itemtype": "method",
            "name": "initTooltip",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "width",
                    "description": "width of tooltip",
                    "type": "String"
                }
            ],
            "return": {
                "description": "tooltip container created",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 232,
            "description": "Initialize width container for tooltip",
            "itemtype": "method",
            "name": "initWidth",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "tooltip width",
                "type": "String"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 257,
            "description": "Initialize gap : the difference between container size and current graph size",
            "itemtype": "method",
            "name": "initRatio",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "container",
                    "description": "the g container",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "gap",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 274,
            "description": "Get the container tooltip height",
            "itemtype": "method",
            "name": "getHeight",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "height of clientHeight tooltip container",
                "type": "String"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 287,
            "description": "Get the container tooltip width",
            "itemtype": "method",
            "name": "getWidth",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "width of clientWidth tooltip container",
                "type": "String"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 300,
            "description": "Get if the tooltip is drawn",
            "itemtype": "method",
            "name": "getIsDrawn",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "true if the tooltip is drawn",
                "type": "Boolean"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 314,
            "description": "Get the container g position",
            "itemtype": "method",
            "name": "getGPosition",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "position into json object {x: vx, y: vy}",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 329,
            "description": "Get the container tooltip position",
            "itemtype": "method",
            "name": "getTooltipPosition",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "width",
                    "description": "width of g",
                    "type": "String"
                },
                {
                    "name": "height",
                    "description": "height of g",
                    "type": "String"
                }
            ],
            "return": {
                "description": "position into json object {tooltipLeft: tl, tooltipTop: tp}",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 408,
            "description": "Get the container size",
            "itemtype": "method",
            "name": "getContainerSize",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "size into json object {height: h, width: w}",
                "type": "Object"
            },
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 424,
            "description": "Method that draws tooltip :<br/>\nUpdates :<br/>\n - the data of tooltip\n - the tooltip position (automatically recalculated)",
            "itemtype": "method",
            "name": "draw",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "content of tooltip",
                    "type": "String"
                }
            ],
            "class": "ResponsiveTooltip"
        },
        {
            "file": "tooltip.js",
            "line": 456,
            "description": "Method to hide tooltip object",
            "itemtype": "method",
            "name": "hide",
            "access": "public",
            "tagname": "",
            "class": "ResponsiveTooltip"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " axis.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " axis.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " brush.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " brush.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " brush.js:288"
        },
        {
            "message": "unknown tag: version",
            "line": " event.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " event.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " selector.js:130"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " selector.js:157"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " selector.js:397"
        },
        {
            "message": "unknown tag: version",
            "line": " tooltip.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " tooltip.js:1"
        },
        {
            "message": "Missing item type\nCreate a responsive selector",
            "line": " selector.js:8"
        },
        {
            "message": "Missing item type\nConstructor",
            "line": " selector.js:33"
        },
        {
            "message": "Missing item type\nMethod to attach custom event",
            "line": " selector.js:54"
        },
        {
            "message": "Missing item type\nMethod to trigger event",
            "line": " selector.js:67"
        },
        {
            "message": "Missing item type\nMethod to remove event on function",
            "line": " selector.js:85"
        },
        {
            "message": "Missing item type\nAdd default events to current object",
            "line": " selector.js:97"
        },
        {
            "message": "Missing item type\nMethod to init properties for tooltip",
            "line": " selector.js:113"
        },
        {
            "message": "Missing item type\nRetrieve the container element",
            "line": " selector.js:130"
        },
        {
            "message": "Missing item type\nInit gap",
            "line": " selector.js:143"
        },
        {
            "message": "Missing item type\nInit data and put element\nallParents on children \nif it doesn't exist",
            "line": " selector.js:157"
        },
        {
            "message": "Missing item type\nMethod to init first parents outline",
            "line": " selector.js:185"
        },
        {
            "message": "Missing item type\nMethod to draw title of first parent",
            "line": " selector.js:254"
        },
        {
            "message": "Missing item type\nMethod to update first parents outline",
            "line": " selector.js:291"
        },
        {
            "message": "Missing item type\nMethod to update first parents title",
            "line": " selector.js:359"
        },
        {
            "message": "Missing item type\nGet the selector container size",
            "line": " selector.js:397"
        },
        {
            "message": "Missing item type\nMethod to draw the outline",
            "line": " selector.js:411"
        },
        {
            "message": "Missing item type\nMethod to draw the selector",
            "line": " selector.js:465"
        },
        {
            "message": "Missing item type\nMethod to draw the outline of node",
            "line": " selector.js:473"
        },
        {
            "message": "Missing item type\nMethod to redraw the selector\non a changed node",
            "line": " selector.js:503"
        },
        {
            "message": "Missing item type\nMethod to hide",
            "line": " selector.js:514"
        },
        {
            "message": "Missing item type\nMethod called on window resize event",
            "line": " selector.js:534"
        }
    ]
}