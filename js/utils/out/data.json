{
    "project": {},
    "files": {
        "constants.js": {
            "name": "constants.js",
            "modules": {},
            "classes": {
                "ResponsiveConstants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "less.js": {
            "name": "less.js",
            "modules": {},
            "classes": {
                "ResponsiveLess": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "treeUtil.js": {
            "name": "treeUtil.js",
            "modules": {},
            "classes": {
                "ResponsiveTreeUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "util.js": {
            "name": "util.js",
            "modules": {},
            "classes": {
                "ResponsiveUtil": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "ResponsiveConstants": {
            "name": "ResponsiveConstants",
            "shortname": "ResponsiveConstants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "constants.js",
            "line": 1,
            "description": "<b>Responsive Constants For d3js library :</b><br/>\n<br/>\nResponive constants offers several constants\n<br/>\nIt already instanciate, to use it you have to use the variable: <br/>\n- $$ResponsiveConstants\n<br/>\n<b>Example:</b><br/>\nvar xsmin = $$ResponsiveConstants._XSMIN_();\n<br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        },
        "ResponsiveLess": {
            "name": "ResponsiveLess",
            "shortname": "ResponsiveLess",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "less.js",
            "line": 1,
            "description": "<b>Responsive Less For d3js library :</b><br/>\n<br/>\nResponive less offers several tools for less file\n<br/>\nIt already instanciate, to use it you have to use the variable: <br/>\n- $$ResponsiveLess\n<br/>\n<b>Example:</b><br/>\n$$ResponsiveLess.updateVariables();\n<br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        },
        "ResponsiveTreeUtil": {
            "name": "ResponsiveTreeUtil",
            "shortname": "ResponsiveTreeUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "treeUtil.js",
            "line": 1,
            "description": "<b>Responsive TreeUtil For d3js library :</b><br/>\n<br/>\nResponive treeUtil offers several tools for trees\n<br/>\nIt already instanciate, to use it you have to use the variable: <br/>\n- $$ResponsiveTreeUtil\n<br/>\n<b>Example:</b><br/>\nvar allParents = $$ResponsiveTreeUtil.getAllParents(d);\n<br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        },
        "ResponsiveUtil": {
            "name": "ResponsiveUtil",
            "shortname": "ResponsiveUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "util.js",
            "line": 1,
            "description": "<b>Responsive Util For d3js library :</b><br/>\n<br/>\nIt already instanciate, to use it you have to use the variable: <br/>\n- $$ResponsiveUtil\n<br/>\n<b>Example:</b><br/>\nvar isMobile = $$ResponsiveUtil.mobile();\n<br/>",
            "is_constructor": 1,
            "version": "0.1",
            "author": "Leclaire Juliana",
            "support": "d3js v3"
        }
    },
    "classitems": [
        {
            "file": "constants.js",
            "line": 41,
            "description": "ResponsiveConstants Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveConstants"
        },
        {
            "file": "constants.js",
            "line": 55,
            "description": "Method to update less variables",
            "itemtype": "method",
            "name": "updateLessVariables",
            "access": "public",
            "tagname": "",
            "class": "ResponsiveConstants"
        },
        {
            "file": "less.js",
            "line": 20,
            "description": "List of less variables<br/>\nRead with : less.variables()<br/>",
            "itemtype": "attribute",
            "name": "variables",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "readonly": "",
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 32,
            "description": "Variable use to keep less variables modifcations before update them",
            "itemtype": "attribute",
            "name": "prepareLessVariables",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "readonly": "",
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 42,
            "description": "ResponsiveLess Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 68,
            "description": "Method that generates unique id",
            "itemtype": "method",
            "name": "generateId",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "an unique id",
                "type": "String"
            },
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 80,
            "description": "This method generates getters and setters options for object obj",
            "itemtype": "method",
            "name": "generateAccessors",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "accessors for object obj",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "json object options",
                    "type": "Object"
                }
            ],
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 99,
            "description": "getLessVars parses your LESS variables to Javascript (provided you make a dummy node in LESS)",
            "itemtype": "method",
            "name": "getLessVars",
            "params": [
                {
                    "name": "id",
                    "description": "The CSS-id your variables are listed under.",
                    "type": "String"
                },
                {
                    "name": "parseNumbers",
                    "description": "Try to parse units as numbers.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "A value object containing your LESS variables.",
                "type": "Object"
            },
            "example": [
                "\nLESS:\n\t&#64;myLessVariable: 123px;\n\t#dummyLessId { width: @myLessVariable; }\nJavascript:\n\tgetLessVars('dummyLessId');\nreturns:\n\t{myLessVariable:123}"
            ],
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 146,
            "description": "Method to retrieve the initial \nvalue of less vars using the function less.modifyVars",
            "itemtype": "method",
            "name": "attributeValueInitialToVars",
            "access": "public",
            "tagname": "",
            "class": "ResponsiveLess"
        },
        {
            "file": "less.js",
            "line": 168,
            "description": "Method to update less variables",
            "itemtype": "method",
            "name": "updateVariables",
            "access": "public",
            "tagname": "",
            "class": "ResponsiveLess"
        },
        {
            "file": "treeUtil.js",
            "line": 20,
            "description": "ResponsiveTreeUtil Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveTreeUtil"
        },
        {
            "file": "treeUtil.js",
            "line": 35,
            "description": "Get all parents on node",
            "itemtype": "method",
            "name": "getAllParents",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "node to get all parents",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parents of node",
                "type": "Array"
            },
            "class": "ResponsiveTreeUtil"
        },
        {
            "file": "treeUtil.js",
            "line": 52,
            "description": "To know if text needs \nto be in light color",
            "itemtype": "method",
            "name": "needLightColor",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "color",
                    "description": "color to evaluate",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if the text needs light color",
                "type": "Boolean"
            },
            "class": "ResponsiveTreeUtil"
        },
        {
            "file": "util.js",
            "line": 18,
            "description": "ResponsiveUtil Constructor",
            "itemtype": "method",
            "name": "my",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 53,
            "description": "Method that generates unique id",
            "itemtype": "method",
            "name": "generateId",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "an unique id",
                "type": "String"
            },
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 65,
            "description": "This method generates getters and setters options for object obj",
            "itemtype": "method",
            "name": "generateAccessors",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "accessors for object obj",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "json object options",
                    "type": "Object"
                }
            ],
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 84,
            "description": "This method allow to add multiple resize events on window",
            "itemtype": "method",
            "name": "addResizeEvent",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "func",
                    "description": "function to invoke when event resize is triggered",
                    "type": "Function"
                }
            ],
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 101,
            "description": "This method is use to detect whether the \nusers browser is an mobile browser",
            "itemtype": "method",
            "name": "mobile",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "true if the device is a mobile",
                "type": "Boolean"
            },
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 129,
            "description": "This method return the position of cursor",
            "itemtype": "method",
            "name": "getCursorPosition",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "position into json object {x; vx, y: vy}",
                "type": "Object"
            },
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 144,
            "description": "This method return the position of element",
            "itemtype": "method",
            "name": "getElementPosition",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "id for get element",
                    "type": "String"
                }
            ],
            "return": {
                "description": "position into json object {x; vx, y: vy}",
                "type": "Object"
            },
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 166,
            "description": "This method is use to detect whether the \ncursor clicked is included",
            "itemtype": "method",
            "name": "isPositionOutsideContainer",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "margin",
                    "description": "margin for the outside zone",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the event is outside",
                "type": "Boolean"
            },
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 188,
            "description": "Calculate width of current screen",
            "itemtype": "method",
            "name": "getWidth",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "screen width",
                "type": "String"
            },
            "class": "ResponsiveUtil"
        },
        {
            "file": "util.js",
            "line": 209,
            "description": "Calculate height of current screen",
            "itemtype": "method",
            "name": "getHeight",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "screen height",
                "type": "String"
            },
            "class": "ResponsiveUtil"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " constants.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " constants.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " less.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " less.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " treeUtil.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " treeUtil.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " util.js:1"
        },
        {
            "message": "unknown tag: support",
            "line": " util.js:1"
        }
    ]
}